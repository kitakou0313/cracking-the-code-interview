"""
1モゾ4バイトとすると、100憶件で４TBになる。

ソートして検知、ハッシュでの検知があるが、今回は速度を考慮してハッシュテーブルを作成する。

ここでは。データの保持方法について考える。


1.ディスクに保管
HDDは安価であり、SSDでも現実的

1GBで分割して、4000のファイルにしてURL%4000で一致したファイルに保存

検索時は該当するファイルをメモリに読み出し、ハッシュで検索

利点、構成が楽、実装しやすい
欠点
ファイルのリードが速度のボトルネックになる
➝キャッシュを効かせる。利用者の利用方法によって有効なキャッシュ方法は変化するけど…（通常のユーザーに近い参照のしかたならドメインで纏めるとか）

平行処理時のリソース管理　他プロセスのリードと競合する可能性➝DBにして行ごとのリードが行えるようにする　URLからは参照するテーブルを求める

2。複数サーバーで分割
1APサーバー、複数の検索サーバーみたいな形にする
APはリクエスト投げるだけなので平行処理が楽

メモリにすべて乗る程度の分割数なら検索も高速

欠点
台数が多いので　障害になる可能性が高い　対応するハッシュ値のサーバーが壊れるとそれに関連するリクエストがすべて落ちる
➝K8Sとか…


"""
