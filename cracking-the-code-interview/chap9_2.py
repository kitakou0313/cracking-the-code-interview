"""
Q 巨大なSNSサービスで友人の友人のような最短経路を見つけるとき、どのようなデータ構造、アルゴリズムを使う？

A
各ユーザーごとに友人のオブジェクトへの参照をもち、各ユーザーをノード、辺を友人関係として扱う。

幅探or深探？　➝　幅探。　深探だととんでもない深さの部分木探索になる。
幅なら最短経路が必ず見つかるのでよい。

今回は目的のノードがわかっているので双方向幅探にすることでメモリに乗せるノード数や探索の回数を削減できる。

スケールの話
一マシンにユーザーデータが乗り切らないです


➝各ユーザーごと、友人はIDの形で持つ。
IDごとに割り当てるマシン（DB）の対応表を持って置き、IDに対応するマシンからユーザーデータを取得し探索する。
"""
